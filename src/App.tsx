import { useState, useEffect, useCallback } from 'react'
import { Routes, Route, Navigate } from 'react-router-dom'
import { motion, AnimatePresence } from 'framer-motion'

// Components
import Layout from '@/components/Layout'
import StepWizard from '@/components/StepWizard'
import ProductSelection from '@/components/steps/ProductSelection'
import ProjectForm from '@/components/steps/ProjectForm'
import DocumentOrdering from '@/components/steps/DocumentOrdering'
import PacketGeneration from '@/components/steps/PacketGeneration'
import ThemeProvider from '@/components/ThemeProvider'

// Types
import type { AppState, ProjectFormData, SelectedDocument } from '@/types'

// Utils
import { storage } from '@/utils'

const STORAGE_KEY = 'pdf-packet-builder-state'

function App() {
  const [appState, setAppState] = useState<AppState>(() => {
    const savedState = storage.get<AppState>(STORAGE_KEY)
    return {
      currentStep: savedState?.currentStep || 1,
      formData: savedState?.formData || {},
      selectedDocuments: savedState?.selectedDocuments || [],
      isGenerating: false,
      darkMode: savedState?.darkMode || false,
    }
  })

  // Save state to localStorage whenever it changes
  useEffect(() => {
    storage.set(STORAGE_KEY, appState)
  }, [appState])

  // Update form data with useCallback to prevent infinite loops
  const updateFormData = useCallback((data: Partial<ProjectFormData>) => {
    setAppState(prev => ({
      ...prev,
      formData: { ...prev.formData, ...data }
    }))
  }, [])

  // Update product type
  const updateProductType = useCallback((productType: ProjectFormData['productType']) => {
    setAppState(prev => ({
      ...prev,
      formData: { ...prev.formData, productType }
    }))
  }, [])

  // Update selected documents with useCallback
  const updateSelectedDocuments = useCallback((documents: SelectedDocument[]) => {
    setAppState(prev => ({
      ...prev,
      selectedDocuments: documents
    }))
  }, [])

  // Navigate to step
  const goToStep = (step: number) => {
    setAppState(prev => ({
      ...prev,
      currentStep: step
    }))
  }

  // Next step
  const nextStep = () => {
    setAppState(prev => ({
      ...prev,
      currentStep: Math.min(prev.currentStep + 1, 4)
    }))
  }

  // Previous step
  const prevStep = () => {
    setAppState(prev => ({
      ...prev,
      currentStep: Math.max(prev.currentStep - 1, 1)
    }))
  }

  // Toggle dark mode
  const toggleDarkMode = () => {
    setAppState(prev => ({
      ...prev,
      darkMode: !prev.darkMode
    }))
  }

  // Set generating state
  const setIsGenerating = (isGenerating: boolean) => {
    setAppState(prev => ({
      ...prev,
      isGenerating
    }))
  }

  // Reset application state
  const resetApp = () => {
    setAppState({
      currentStep: 1,
      formData: {},
      selectedDocuments: [],
      isGenerating: false,
      darkMode: appState.darkMode, // Preserve dark mode preference
    })
    storage.remove(STORAGE_KEY)
  }

  const stepComponents = {
    1: ProductSelection,
    2: ProjectForm,
    3: DocumentOrdering,
    4: PacketGeneration,
  }

  return (
    <ThemeProvider darkMode={appState.darkMode}>
      <div className="min-h-screen bg-gradient-to-br from-gray-50 via-white to-gray-100 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 transition-colors duration-300">
        <Routes>
          <Route
            path="/"
            element={
              <Layout
                darkMode={appState.darkMode}
                onToggleDarkMode={toggleDarkMode}
                onReset={resetApp}
              >
                <div className="container mx-auto px-4 py-8 max-w-6xl">
                  {/* Header */}
                  <motion.div
                    initial={{ opacity: 0, y: -20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.6 }}
                    className="text-center mb-12"
                  >
                    <div className="flex flex-col items-center">
                      <svg width="225" height="33" viewBox="0 0 225 33" fill="none" xmlns="http://www.w3.org/2000/svg" className="mb-4">
                        <g clipPath="url(#clip0_2306_2067)">
                          <path d="M140.524 32.6914C137.246 32.6914 133.954 32.6914 130.676 32.6914C129.424 32.6914 128.203 32.5738 126.966 32.3239C125.983 32.1328 125.029 31.8388 124.106 31.4713C122.556 30.8686 121.186 29.9867 119.904 28.9283C117.655 27.0615 116.105 24.7243 115.107 22.0343C114.63 20.7408 114.332 19.3885 114.243 17.992C114.183 17.1983 114.153 16.4045 114.153 15.6107C114.153 12.2887 115.032 9.23123 116.999 6.49716C117.908 5.23301 119.01 4.15996 120.262 3.2192C121.498 2.29315 122.854 1.57288 124.329 1.0584C125.387 0.69092 126.475 0.426332 127.592 0.24994C129.141 0.0147502 130.706 -0.0146484 132.255 -0.0146484C137.738 -0.0146484 143.206 -0.0146484 148.688 -0.0146484C149.274 -0.0146484 149.567 0.269539 149.567 0.837913C149.567 2.24905 149.567 3.67488 149.567 5.08602C149.567 5.24771 149.567 5.39471 149.553 5.5564C149.538 5.71809 149.448 5.80629 149.27 5.80629C149.091 5.80629 148.912 5.80629 148.748 5.80629C142.699 5.80629 136.635 5.77689 130.587 5.80629C127.517 5.82099 124.865 6.92344 122.75 9.14303C121.439 10.5248 120.604 12.1564 120.262 14.0379C120.098 14.9346 119.949 15.8459 119.994 16.772C120.128 19.8735 121.245 22.5047 123.733 24.5185C124.836 25.4152 126.072 26.0179 127.443 26.4147C128.426 26.694 129.424 26.841 130.452 26.841C135.384 26.841 140.315 26.841 145.247 26.841C145.336 26.841 145.426 26.841 145.515 26.841C145.917 26.8263 145.977 26.7675 146.007 26.3854C146.156 24.5038 146.066 22.6223 146.066 20.7408C146.066 20.7261 146.066 20.7114 146.066 20.682C146.007 19.9029 145.992 19.8882 145.187 19.8882C140.539 19.8882 135.891 19.8882 131.227 19.8882C130.621 19.8882 130.313 19.5943 130.303 19.0063C130.303 17.8156 130.303 16.625 130.303 15.4343C130.303 15.2727 130.303 15.1257 130.303 14.964C130.318 14.7141 130.452 14.5818 130.706 14.5818C130.84 14.5818 130.989 14.5818 131.123 14.5818C137.738 14.5818 144.353 14.5818 150.968 14.5818C151.574 14.5818 151.877 14.8709 151.877 15.449C151.877 20.9172 151.877 26.3707 151.877 31.8388C151.877 32.3974 151.599 32.6767 151.042 32.6767C147.526 32.6767 144.025 32.6767 140.509 32.6767L140.524 32.6914Z" fill="#00A2C9"/>
                          <path d="M26.7874 22.3871C26.9066 22.1666 26.8619 21.9902 26.8619 21.8138C26.8619 14.8316 26.8619 7.84944 26.8619 0.867261C26.8619 0 26.8619 0 27.726 0C29.1414 0 30.5716 0 31.987 0C32.1509 0 32.2999 0 32.4638 0.0146993C32.6426 0.0293987 32.7468 0.132294 32.7617 0.308686C32.7617 0.426281 32.7617 0.543875 32.7617 0.676169C32.7617 10.3189 32.7617 19.9617 32.7617 29.6192C32.7617 30.1777 32.6872 30.7216 32.5681 31.2655C32.3148 32.4708 31.4954 33.0588 30.2588 32.9853C29.2159 32.9265 28.4113 32.3826 27.6515 31.7506C27.1449 31.3243 26.698 30.8392 26.2212 30.3688C19.8744 24.1069 13.5275 17.845 7.16579 11.5831C6.83802 11.2597 6.49535 10.9216 6.16758 10.5835C6.07819 10.51 6.01859 10.3777 5.83981 10.3924C5.75042 10.5541 5.79511 10.7452 5.79511 10.9363C5.79511 17.8891 5.79511 24.8272 5.79511 31.78C5.79511 32.3679 5.49714 32.6619 4.90119 32.6619C3.53051 32.6619 2.15983 32.6619 0.789154 32.6619C0.625269 32.6619 0.476282 32.6619 0.312396 32.6619C0.103815 32.6619 -0.0153747 32.5443 -0.0302734 32.3385C-0.0302734 32.2062 -0.0302734 32.0592 -0.0302734 31.9269C-0.00047606 22.2842 -0.00047606 12.612 -0.00047606 2.95457C-0.00047606 2.42539 0.0889161 1.92561 0.297498 1.44053C0.848749 0.249889 2.11514 -0.264588 3.38153 0.146993C4.29035 0.44098 5.05018 0.955457 5.72062 1.60223C6.80822 2.66058 7.88093 3.71893 8.96853 4.79198C13.5573 9.31938 18.1461 13.8468 22.7349 18.3595C23.8523 19.4619 24.9548 20.5644 26.0871 21.6668C26.3255 21.8873 26.4894 22.1813 26.8023 22.3871H26.7874Z" fill="#00A2C9"/>
                          <path d="M219.1 22.3577C219.219 22.2107 219.159 22.0343 219.159 21.8579C219.159 14.861 219.159 7.84945 219.159 0.85257C219.159 0.284196 219.447 9.06922e-06 220.023 9.06922e-06C221.424 9.06922e-06 222.839 9.06922e-06 224.24 9.06922e-06C224.404 9.06922e-06 224.553 9.06922e-06 224.716 9.06922e-06C224.895 9.06922e-06 225.014 0.102904 225.014 0.293996C225.014 0.367492 225.014 0.42629 225.014 0.499786C225.014 10.0544 225.014 19.6236 225.014 29.1782C225.014 29.825 225.014 30.4717 224.88 31.0891C224.612 32.3679 223.867 33.0735 222.601 32.9706C222.035 32.9265 221.498 32.7942 221.007 32.4855C220.485 32.1621 219.979 31.8241 219.547 31.3978C216.299 28.1933 213.051 24.9889 209.803 21.7844C208.864 20.8584 207.911 19.9323 206.972 18.9915C204.231 16.2722 201.489 13.5381 198.748 10.8187C198.599 10.6717 198.465 10.3924 198.271 10.4659C198.018 10.5541 198.137 10.8628 198.137 11.0686C198.137 17.9626 198.137 24.8566 198.137 31.7653C198.137 32.363 197.839 32.6619 197.243 32.6619C195.798 32.6619 194.368 32.6619 192.923 32.6619C192.267 32.6619 192.237 32.6325 192.237 32.0005C192.237 29.9719 192.237 27.9581 192.237 25.9296C192.237 18.3742 192.237 10.8187 192.237 3.26326C192.237 2.76348 192.297 2.26371 192.446 1.77863C192.938 0.176401 194.308 -0.308677 195.768 0.147002C196.588 0.41159 197.273 0.896668 197.869 1.48464C199.567 3.16037 201.266 4.82139 202.964 6.49711C208.224 11.686 213.483 16.8748 218.742 22.049C218.846 22.1519 218.936 22.2989 219.115 22.3136L219.1 22.3577Z" fill="#00A2C9"/>
                          <path d="M40.4346 16.331C40.4346 11.1421 40.4346 5.96793 40.4346 0.779065C40.4346 0.259688 40.6978 0 41.2242 0C50.2379 0 59.2665 0 68.2802 0C68.3696 0 68.459 0 68.5484 0C69.0103 0.0146993 69.0847 0.0734966 69.0847 0.558575C69.0847 2.1461 69.0847 3.73363 69.0847 5.33586C69.0847 5.80624 69.055 5.82094 68.5633 5.82094C61.3672 5.82094 54.1712 5.82094 46.9751 5.82094C46.8708 5.82094 46.7665 5.82094 46.6622 5.82094C46.4089 5.82094 46.2749 5.93853 46.26 6.20312C46.26 6.33541 46.26 6.48241 46.26 6.6147C46.26 13.1118 46.26 19.6089 46.26 26.106C46.26 26.1207 46.26 26.1354 46.26 26.1648C46.26 26.8557 46.26 26.8557 46.9602 26.8557C53.754 26.8557 60.5478 26.8557 67.3416 26.8557C67.7439 26.8557 68.1461 26.8557 68.5484 26.8557C68.9954 26.8557 69.0698 26.9292 69.0847 27.3702C69.0847 28.2521 69.0847 29.1341 69.0847 30.016C69.0847 30.7216 69.0847 31.4272 69.0847 32.1474C69.0847 32.6325 69.0252 32.6766 68.5335 32.6766C68.31 32.6766 68.0716 32.6766 67.8482 32.6766C59.0132 32.6766 50.1932 32.6766 41.3583 32.6766C40.7425 32.6766 40.4346 32.3777 40.4346 31.78C40.4346 26.6352 40.4346 21.4757 40.4346 16.331Z" fill="#00A2C9"/>
                          <path d="M157.018 16.331V0.823162C157.018 0 157.018 0 157.867 0C166.806 0 175.73 0 184.67 0C185.608 0 185.608 0 185.608 0.896659C185.608 2.1902 185.608 3.48374 185.608 4.79198C185.608 4.90958 185.608 5.02717 185.608 5.15946C185.608 5.77684 185.578 5.80624 184.968 5.82093C184.759 5.82093 184.55 5.82093 184.342 5.82093C177.473 5.82093 170.62 5.82093 163.752 5.82093C162.858 5.82093 162.843 5.74744 162.843 6.6882C162.843 13.1559 162.843 19.6236 162.843 26.0766C162.843 26.596 163.106 26.8557 163.633 26.8557C170.665 26.8557 177.712 26.8557 184.744 26.8557C185.608 26.8557 185.608 26.8557 185.608 27.7229C185.608 29.1194 185.608 30.5305 185.608 31.9269C185.608 32.0298 185.608 32.1327 185.608 32.2356C185.578 32.6178 185.519 32.6619 185.131 32.6913C185.042 32.6913 184.953 32.6913 184.863 32.6913C175.82 32.6913 166.791 32.6913 157.748 32.6913C157.643 32.6913 157.539 32.6913 157.435 32.6913C157.181 32.6913 157.047 32.5737 157.047 32.3091C157.047 32.1474 157.047 32.0004 157.047 31.8387C157.047 26.6646 157.047 21.5051 157.047 16.331H157.018Z" fill="#00A2C9"/>
                          <path d="M58.0601 18.9915C55.1548 18.9915 52.2347 18.9915 49.3294 18.9915C48.5696 18.9915 48.5547 18.9915 48.5547 18.2566C48.5547 16.816 48.5547 15.3902 48.5547 13.9497C48.5547 13.8174 48.5547 13.6704 48.5547 13.5381C48.5547 13.3176 48.7037 13.2 48.9272 13.1853C49.0463 13.1853 49.1655 13.1853 49.2996 13.1853C55.125 13.1853 60.9504 13.1853 66.7758 13.1853C67.625 13.1853 67.625 13.1853 67.625 14.0232C67.625 15.4343 67.625 16.8601 67.625 18.2713C67.625 18.4036 67.625 18.5506 67.625 18.6829C67.6101 18.8886 67.4909 18.9915 67.2823 18.9915C67.1483 18.9915 66.9993 18.9915 66.8652 18.9915C63.9301 18.9915 61.01 18.9915 58.0749 18.9915H58.0601Z" fill="#00A2C9"/>
                          <path d="M174.688 18.9916C171.782 18.9916 168.862 18.9916 165.957 18.9916C165.167 18.9916 165.152 18.9916 165.152 18.2272C165.152 16.8308 165.152 15.4344 165.152 14.0232C165.152 13.9497 165.152 13.8909 165.152 13.8174C165.152 13.2295 165.227 13.1707 165.823 13.1707C171.678 13.1707 177.548 13.1707 183.403 13.1707C183.508 13.1707 183.612 13.1707 183.716 13.1707C183.969 13.1707 184.103 13.3176 184.118 13.5675C184.118 13.5969 184.118 13.641 184.118 13.6704C184.118 15.2874 184.118 16.919 184.118 18.5359C184.118 18.9034 184.044 18.9475 183.686 18.9769C183.582 18.9769 183.478 18.9769 183.373 18.9769C180.483 18.9769 177.578 18.9769 174.688 18.9769V18.9916Z" fill="#00A2C9"/>
                          <path d="M77.5331 32.7648C76.3412 32.7648 75.1493 32.7648 73.9574 32.7648C73.7786 32.7648 73.5105 32.8236 73.436 32.6325C73.3615 32.4267 73.5999 32.3238 73.734 32.1915C75.2089 30.6922 76.7286 29.2223 78.1738 27.6935C79.321 26.4882 80.5427 25.3417 81.6899 24.1216C83.1499 22.5782 84.6994 21.1229 86.1744 19.5942C87.0683 18.6682 87.992 17.7568 88.8859 16.8454C89.2733 16.4486 89.2584 16.4045 88.8859 16.0076C86.964 14.0673 85.0123 12.1564 83.1201 10.1866C81.1088 8.09934 79.0826 6.05613 77.0415 4.01293C76.2518 3.21916 75.5069 2.396 74.7322 1.60224C74.3746 1.22005 74.0021 0.867271 73.6297 0.485088C73.5403 0.382193 73.4062 0.293997 73.4956 0.132304C73.5701 0.0147095 73.7042 0.0147095 73.8233 0.0147095C74.1809 0.0147095 74.5236 0.0147095 74.8812 0.0147095C76.8329 0.0147095 78.7697 0.0147095 80.7214 0.0147095C81.1386 0.0147095 81.4515 0.147003 81.7345 0.44099C83.4926 2.23431 85.2059 4.04233 86.9342 5.86504C87.1428 6.08553 87.3514 6.29132 87.5599 6.49711C89.169 8.15814 90.7929 9.80446 92.3871 11.4802C93.6684 12.8325 94.9497 14.1849 96.2608 15.5078C96.4694 15.7136 96.663 15.9488 96.8567 16.1693C97.0951 16.4339 97.11 16.4486 96.8567 16.7278C96.3204 17.3452 95.7691 17.9479 95.2179 18.5506C93.6684 20.241 92.1338 21.9461 90.5695 23.6218C89.4819 24.7831 88.3645 25.9002 87.262 27.0321C86.0105 28.3109 84.7441 29.5751 83.4926 30.8686C82.986 31.3978 82.4795 31.9123 81.9729 32.4414C81.7197 32.706 81.4515 32.7942 81.0939 32.7942C79.9169 32.7942 78.7399 32.7942 77.5629 32.7942L77.5331 32.7648Z" fill="#00A2C9"/>
                          <path d="M108.895 32.7648C107.777 32.7648 106.645 32.7501 105.528 32.7648C105.051 32.7648 104.693 32.6178 104.366 32.2797C102.325 30.2071 100.239 28.1786 98.2274 26.0913C97.3037 25.1211 96.3054 24.2098 95.4264 23.2102C95.2476 23.0044 95.0242 22.828 94.8305 22.6222C94.5474 22.3136 94.5474 22.2842 94.8305 21.9902C95.8436 20.9171 96.8716 19.8441 97.8847 18.771C98.0337 18.624 98.1678 18.4623 98.3019 18.3006C98.5402 18.036 98.6296 18.0213 98.8978 18.2712C99.1958 18.5505 99.464 18.8298 99.7619 19.1091C100.864 20.1527 101.907 21.2552 102.965 22.3282C106.213 25.6209 109.491 28.9136 112.783 32.1621C112.813 32.1915 112.828 32.2062 112.858 32.2356C112.947 32.3385 113.096 32.4267 113.052 32.5884C112.992 32.7648 112.798 32.7501 112.649 32.7501C111.398 32.7501 110.161 32.7501 108.91 32.7501L108.895 32.7648Z" fill="#00A2C9"/>
                          <path d="M109.059 -2.02823e-05C110.206 -2.02823e-05 111.338 -2.02823e-05 112.485 -2.02823e-05C112.605 -2.02823e-05 112.739 -2.02823e-05 112.858 -2.02823e-05C113.051 0.0293784 113.111 0.146973 112.977 0.293966C112.739 0.573254 112.5 0.852541 112.247 1.10243C109.997 3.38083 107.733 5.64452 105.468 7.92292C103.248 10.1719 101.028 12.4356 98.8083 14.6993C98.5401 14.9639 98.4954 14.9786 98.2124 14.714C97.8846 14.42 97.5866 14.1113 97.2738 13.8027C96.499 13.0677 95.7243 12.3474 94.9496 11.6125C94.8453 11.5096 94.741 11.4214 94.6516 11.3185C94.3387 10.9951 94.3387 10.951 94.6367 10.6423C95.1581 10.0984 95.6647 9.55455 96.2011 9.02537C98.0038 7.20265 99.8214 5.40933 101.594 3.55722C102.682 2.42537 103.829 1.36702 104.872 0.191071C105.051 -0.0147196 105.304 -0.0147196 105.543 -0.0294189C106.72 -0.0294189 107.897 -0.0294189 109.074 -0.0294189L109.059 -2.02823e-05Z" fill="#00A2C9"/>
                        </g>
                        <defs>
                          <clipPath id="clip0_2306_2067">
                            <rect width="225" height="33" fill="white"/>
                          </clipPath>
                        </defs>
                      </svg>
                      <h1 className="text-2xl md:text-3xl font-semibold font-display" style={{ color: '#00A2C9' }}>
                        Submittal Form Builder
                    </h1>
                    </div>
                  </motion.div>

                  {/* Step Wizard */}
                  <StepWizard
                    currentStep={appState.currentStep}
                    onStepClick={goToStep}
                    formData={appState.formData}
                    selectedDocuments={appState.selectedDocuments}
                  />

                  {/* Main Content */}
                  <motion.div
                    key={appState.currentStep}
                    initial={{ opacity: 0, x: 20 }}
                    animate={{ opacity: 1, x: 0 }}
                    exit={{ opacity: 0, x: -20 }}
                    transition={{ duration: 0.4 }}
                    className="mt-12"
                  >
                    <AnimatePresence mode="wait">
                      {(() => {
                        const StepComponent = stepComponents[appState.currentStep as keyof typeof stepComponents]
                        
                        if (!StepComponent) {
                          return <Navigate to="/" replace />
                        }

                        // Handle different props for different steps
                        if (appState.currentStep === 1) {
                          const ProductSelectionComponent = StepComponent as typeof ProductSelection;
                          return (
                            <ProductSelectionComponent
                              productType={appState.formData.productType}
                              onUpdateProductType={updateProductType}
                              onNext={nextStep}
                            />
                          )
                        }
                        
                        if (appState.currentStep === 2) {
                          const ProjectFormComponent = StepComponent as typeof ProjectForm;
                          return (
                            <ProjectFormComponent
                              formData={appState.formData}
                              onUpdateFormData={updateFormData}
                              onNext={nextStep}
                              onPrevious={prevStep}
                            />
                          )
                        }
                        
                        const OtherStepComponent = StepComponent as any;
                        return (
                          <OtherStepComponent
                            formData={appState.formData}
                            selectedDocuments={appState.selectedDocuments}
                            onUpdateFormData={updateFormData}
                            onUpdateSelectedDocuments={updateSelectedDocuments}
                            onNext={nextStep}
                            onPrevious={prevStep}
                            isGenerating={appState.isGenerating}
                            onSetGenerating={setIsGenerating}
                          />
                        )
                      })()}
                    </AnimatePresence>
                  </motion.div>

                  {/* Progress Indicator */}
                  <motion.div
                    initial={{ opacity: 0 }}
                    animate={{ opacity: 1 }}
                    transition={{ delay: 0.8, duration: 0.4 }}
                    className="fixed bottom-6 right-6 z-50"
                  >
                    <div className="glass-card dark:glass-card-dark p-4 text-sm font-medium text-gray-700 dark:text-gray-300">
                      Step {appState.currentStep} of 4
                    </div>
                  </motion.div>
                </div>
              </Layout>
            }
          />
          
          {/* Redirect any other routes to home */}
          <Route path="*" element={<Navigate to="/" replace />} />
        </Routes>
      </div>
    </ThemeProvider>
  )
}

export default App
